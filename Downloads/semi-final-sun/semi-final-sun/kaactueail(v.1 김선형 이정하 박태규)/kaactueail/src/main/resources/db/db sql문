-- v0.1 --
-- member, admin, cockit만 앞글자를 따서 컬럼명을 정함 --
-- 나머지는 직관성을 위해 풀네임으로 정했음 -- 


 -- 삭제 구문 --
drop table Answer;
drop table Question;
drop table InfoBoard;
drop table SellBoard;
drop table Recipe;
drop table Ingredient;
drop table Purchase_history;
drop table LikeBoard;
drop table MyCocktailBoard;
drop table BucketList;
drop table FreeBoard;
drop table Member;
drop table Admin;
drop table Cockit;


----------------------------------------------------------------------------


   --------- 회원, 관리자 테이블 -----------
----------------------------------------------------------------------------

 -- 회원 테이블 --
create table Member (

   M_num number(8) primary key, -- 회원 번호 기본키 --
   M_id varchar2(20 char) unique not null, -- 회원 아이디 --   
   M_pwd varchar2(20 char) not null, -- 회원 비밀번호 --
   M_name varchar2(20 char) not null, -- 회원 이름 --
   M_birth varchar2(8) not null, -- 회원 생년월일 YYYYMMDD --
   M_tel varchar2(11) not null, -- 회원 연락처 --
   M_role varchar2(50),
   M_isOnline number default 0
);

----------------------------------------------------------------------------

 -- 관리자 테이블 --
create table Admin(

   A_num number(8) primary key, -- 관리자 번호 기본키 --
   A_id varchar2(20 char) unique not null, -- 관리자 아이디 --   
   A_pwd varchar2(20 char) not null, -- 관리자 비밀번호 --
   A_name varchar2(20 char) not null, -- 관리자 이름 --
   A_tel varchar2(11) not null, -- 관리자 연락처 --
   A_role varchar2(50),
   A_isOnline number default 0
);


----------------------------------------------------------------------------



   --------- 재료, 칵키트, 레시피 테이블 -----------
----------------------------------------------------------------------------


 -- 칵키트 테이블 --
create table Cockit(

   C_num number(7) primary key, -- 칵테일 번호 기본키 --
   C_name varchar2(20 char) unique, -- 칵테일 이름 --
   C_price number not null, -- 칵키트 가격 --
   C_img_name varchar2(20 char) not null unique, -- 칵키트 이미지 이름 --
   C_img_path varchar2(50 char) -- 칵키트 경로 --

);


----------------------------------------------------------------------------


 -- 재료 테이블 --
create table Ingredient(

   Ingredient_num number(7) primary key, -- 재료 번호 기본키 --
   Ingredient_name varchar2(20 char) unique, -- 재료 이름 --
   Ingredient_img_name varchar2(20 char) not null unique, -- 재료 이미지 이름 --
   Ingredient_img_path varchar2(50 char) -- 재료 경로 --

);


----------------------------------------------------------------------------

 -- 레시피 테이블 --
-- 칵키트 번호와 재료 번호를 inner join하여 레시피를 찾는다. --

create table Recipe(
   Recipe_num number(7) not null,          -- 레시피 번호 기본키 --

   -- 재료 테이블의 재료 번호 외래키 --
   Recipe_I_num number(7) unique,         
   constraint Recipe_I_num_fk foreign key(Recipe_I_num) references Ingredient (Ingredient_num),   
   
   -- 칵키트 테이블의 칵키트 번호 외래키 --
   Recipe_C_num number(7) unique,          
   constraint Recipe_C_num_fk foreign key(Recipe_C_num) references Cockit (C_num) 

);

   --------- 소개, 자유, 나만의 칵테일, 좋아요, 판매 게시판 -----------
----------------------------------------------------------------------------


 -- 소개 게시판 테이블 --
create table InfoBoard(

   InfoBoard_num number(8) primary key,                      -- 소개 게시판 게시글 번호 (기본키) -- 
   InfoBoard_title varchar2(20 char) not null,                  -- 소개 게시판 게시글 제목 -- 
   InfoBoard_content varchar2(2000) not null,      
   InfoBoard_recipe varchar2(300 char) not null,               -- 소개 게시판 게시글 내용 -- 
   InfoBoard_date date,                                        -- 소개 게시판 게시글 작성일자 -- 
   InfoBoard_writer varchar2(20) not null,                      -- 소개 게시판 게시글 작성자 -- 
   InfoBoard_readcount number default 0,                      -- 소개 게시판 게시글 조회수 -- 
   InfoBoard_imgname varchar2(20 char) not null unique,
   -- 소개 게시판 작성자의 회원번호를 외래키로 가진다. --
   InfoBoard_Admin_num number(8) not null,
   constraint InfoBoard_Admin_num_fk foreign key(InfoBoard_Admin_num) references Admin(A_num) on delete cascade
);


----------------------------------------------------------------------------


 -- 자유게시판 테이블 --
create table FreeBoard(

   FreeBoard_num number(8) primary key,      -- 자유 게시판의 게시글 번호(기본키) --
   FreeBoard_title varchar2(20 char) not null,      -- 자유 게시판의 제목 --
   FreeBoard_content varchar2(2000),         -- 자유 게시판의 내용 --
   FreeBoard_date date,            -- 자유 게시판의 작성일자 --
   FreeBoard_writer varchar2(20) not null,      -- 자유 게시판의 작성자 --
   FreeBoard_readcount number default 0,      -- 자유 게시판의 조회수 --

   -- 자유 게시판의 작성자 회원번호를 외래키로 가진다. --
   FreeBoard_M_num number(8) not null,         
   constraint FreeBoard_M_num_fk foreign key (FreeBoard_M_num) references Member(M_num) on delete cascade

);


----------------------------------------------------------------------------


 -- 나만의 칵테일 게시판 테이블 --
create table MyCocktailBoard(

   MyCocktail_num number(8) primary key,      -- 나만의 칵테일 게시판 테이블 (기본키) --
   MyCocktail_title varchar2(20 char) not null,      -- 나만의 칵테일 게시판 제목 --
   MyCocktail_content varchar2(2000 char) not null,   -- 나만의 칵테일 게시판 내용 --
   MyCocktail_recipe varchar2(300 char ) not null,      -- 나만의 칵테일 게시판 레시피 --
   MyCocktail_date date,            -- 나만의 칵테일 게시판 작성일자 --
   MyCocktail_writer varchar2(20) not null,      -- 나만의 칵테일 작성자 --
   MyCocktail_readcount number default 0,      -- 나만의 칵테일 조회수 --
   MyCocktail_imgname varchar2(20 char)not null unique,
   -- 나만의 칵테일 작성자 회원번호를 외래키로 가진다. --
   MyCocktail_M_num number(8) not null,      
   constraint MyCocktail_M_num_fk foreign key (MyCocktail_M_num) references Member(M_num) on delete cascade  
);


----------------------------------------------------------------------------
-- 좋아요 게시판 --
-- 좋아요 게시판에 좋아요 카운트 증가한 것을 나만의 칵테일 게시판이 inner join으로 가져옴 --
create table LikeBoard(

   LikeBoard_num number(8) primary key,               -- 좋아요 게시판 번호 (기본키) -- 
   Like_cnt number default 0,                            -- 좋아요 개수 0으로 초기화 --
    
   -- 좋아요 게시판과 나만의 칵테일 게시판 번호 매치 (외래키) --
   LikeBoard_MyCocktail_num number(8) not null,         
      constraint LikeBoard_MyCocktail_num_fk foreign key 
   (LikeBoard_MyCocktail_num) references MyCocktailBoard (MyCocktail_num) on delete cascade
);


----------------------------------------------------------------------------


 -- 판매 게시판 테이블 --
create table SellBoard(

   SellBoard_num number(8) primary key,            -- 판매 게시판 게시글 번호 (기본키) --
   SellBoard_title varchar2(20 char) not null,     -- 판매 게시판 게시글 제목 --
   SellBoard_content varchar2(2000 char),               -- 판매 게시판 게시글 내용 --
   SellBoard_recipe varchar2(300 char),               -- 판매 게시판 레시피 내용 --
   SellBoard_date date,                            -- 판매 게시판 게시글 작성일자 --
   SellBoard_writer varchar2(20) not null,         -- 판매 게시판 게시글 작성자 --
   SellBoard_readcount number default 0,           -- 판매 게시판 게시글 조회수 --
   SellBoard_imgname varchar2(20 char)not null unique,
    -- 판매 게시판의 판매 물품 번호 매치 (기본키) --
   SellBoard_C_num number(7) not null,
   constraint SellBoard_C_num_fk foreign key(SellBoard_C_num) references Cockit (C_num) on delete cascade,

     -- 판매 게시판 번호와 관리자 번호 매치 (기본키) --
   SellBoard_Admin_num number(8) not null,
   constraint SellBoard_Admin_num_fk foreign key(SellBoard_Admin_num) references Admin(A_num)
);


----------------------------------------------------------------------------

----------------- 장바구니, 구매내역 테이블 --------------------
----------------------------------------------------------------------------


 -- 장바구니 테이블 --
create table BucketList(

   BucketList_num varchar2(7 char) primary key,      -- 장바구니 번호 (기본키) --
   BucketList_cost number default 0,         -- 장바구니 비용 --
   BucketList_amount number default 0,         -- 장바구니 개수 --

   -- 장바구니의 회원번호를 외래키로 가진다 --
   BucketList_M_num number(8),
   constraint BucketList_M_num_fk foreign key(BucketList_M_num) 
   references Member(M_num) on delete cascade,
   
   -- 장바구니의 칵키트 번호를 외래키로 가진다 --
   BucketList_C_num number(7),
   constraint BucketList_C_num_fk foreign key(BucketList_C_num) 
   references Cockit(C_num)

);


----------------------------------------------------------------------------

 -- 구매 내역 테이블 (회원 <-> 관리자) --
create table Purchase_history(

   Purchase_num varchar2(7 char) primary key,
   Purchase_cost number default 0,
   Purchase_amount number default 0,
   Purchase_date date,
   Purchase_M_num number(8),
   Purchase_C_num number(7),
      
   constraint Purchase_M_num_fk foreign key(Purchase_M_num) references Member(M_num) on delete cascade,
   constraint Purchase_C_num_fk foreign key(Purchase_C_num) references Cockit(C_num)

);


----------------------------------------------------------------------------


 -- 문의 내역 --
create table Question(

   Question_num varchar2(8 char) primary key,      -- 문의내역 번호(기본키) --
   Question_title varchar2(20 char) not null,      -- 문의내역 제목 --
   Question_content varchar2(2000),         -- 문의내역 내용 --
   Question_date date,            -- 문의내역 작성일자 --
   Question_writer varchar2(20) not null,      -- 문의내역 작성자 --
   Question_readcount number default 0,      -- 문의내역 조회수 --

   -- 문의 게시판의 작성자 회원번호를 외래키로 가진다. --
   Question_M_num number(8),
   constraint Question_M_num_fk foreign key(Question_M_num) references Member(M_num) on delete cascade  
);

---------------------------------------------------------------------------

 -- 답글 내역 --
create table Answer(

   Answer_num varchar2(7 char) primary key,      -- 답변 번호(기본키) --
   Answer_content varchar2(2000),         -- 답변 내용 --
   Answer_date date,            -- 답변 작성일자 --
   Answer_writer varchar2(20) not null,      -- 답변 작성자 --

   -- 답변의 작성자 관리자 번호를 외래키로 가진다. --
   Answer_Admin_num number(8) not null,         
   constraint Answer_Admin_num_fk foreign key(Answer_Admin_num) references Admin(A_num),   

   -- 답변번호를 문의 내역번호 외래키로 가진다. --
   Answer_Q_num varchar2(7 char) not null,         
   constraint Answer_Q_num_fk foreign key(Answer_Q_num) references Question(Question_num) on delete cascade   
);
commit;


------- 주석 테이블 (재고, 주문내역, 공급자 테이블) 
----------------------------------------------------------------------------
/*

 -- 재고 테이블 --
create table Product(

   P_num number(7) primary key,                    -- 재고 번호 기본키 --
   P_name varchar2(20 char) unique not null,       -- 재고 이름 --
   P_listprice number not null,                    -- 재고 정가 --
   P_cost number not null,                         -- 재고 원가 --
   P_amount number default 0,                      -- 재고 수량 --
   P_img_name varchar2(20 char),                   -- 재고 이미지 이름 --
   P_img_path varchar2(50 char),                   -- 재고 이미지 경로 --

   P_supplierid varchar2(7) not null               
   
);
*/

----------------------------------------------------------------------------

/*
 -- 주문 내역 테이블 (관리자 <-> 공급업체) --
create table Order_history(

   Order_num varchar2(7 char) primary key,
   Order_cost number default 0,
   Order_amount number default 0,
   Order_date date,
   Order_Admin_num number(8),
   Order_Supplier_num number(8),
   
   constraint Order_Admin_num_fk foreign key (Order_Admin_num) references Admin(Admin_num),
   constraint Order_Supplier_num_fk foreign key (Order_Supplier_num) references Supplier(Supplier_num)

);
*/

----------------------------------------------------------------------------

/*
 -- 공급자 테이블 --
create table Supplier(

   Supplier_num number(8) primary key,         -- 공급업체 번호 기본키 --
   Supplier_name varchar2(20 char) not null,   -- 공급업체 이름 기본키 --
       Supplier_manager_num number(8) not null,    -- 공급업체를 관리하는 관리자 번호 (외래키) --
       constraint Supplier_manager_num_fk foreign key(Supplier_manager_num) references Admin (Admin_num)
);
*/

----------------------------------------------------------------------------
 ----------------------------------------------------------------------------
 

select * from Member;
select * from Admin;
select * from Cockit;
select * from Ingredient;
select * from Recipe;
select * from InfoBoard;
select * from FreeBoard;
select * from MyCocktailBoard;
select * from LikeBoard;
select * from SellBoard;
select * from BucketList;
select * from Purchase_history;
select * from Question;
select * from Answer;






insert into member values(1,'test_m_id','test_m_pwd','test_m_name','970814','test_m_tel','test_m_role',0);
insert into mycocktailboard values(1,'test_mycock_title','test_mycock_content','test_mycocktail_recipe',sysdate,'test_mycock_writer',100,'test_mycock_imgname',1);
update mycocktailboard set MyCocktail_imgname = 'mycocktail01' where mycocktail_num = 1;
commit;